# This is the name of the workflow, visible on GitHub UI.
name: ESPixelStick CI

env:
  arduinolib: Arduino/libraries

# Here we tell GitHub to run the workflow when a commit
# is pushed or a Pull Request is opened.
on: [push, pull_request]

# This is the list of jobs that will be run concurrently.
# Since we use a build matrix, the actual number of jobs
# started depends on how many configurations the matrix
# will produce.
jobs:
  # This is the name of the job - can be whatever.
  test-matrix:

    # Here we tell GitHub that the jobs must be determined
    # dynamically depending on a matrix configuration.
    strategy:
      matrix:
        # The matrix will produce one job for each configuration
        # parameter of type `arduino-platform`, in this case a
        # total of 2.
        #arduino-platform: ["arduino:samd", "arduino:avr"]
        arduino-platform: ["arduino:esp8266com"]
        # This is usually optional but we need to statically define the
        # FQBN of the boards we want to test for each platform. In the
        # future the CLI might automatically detect and download the core
        # needed to compile against a certain FQBN, at that point the
        # following `include` section will be useless.
        include:
          # This works like this: when the platformn is "arduino:samd", the
          # variable `fqbn` is set to "arduino:samd:nano_33_iot".
          #- arduino-platform: "arduino:samd"
          #  fqbn: "arduino:samd:nano_33_iot"
          #- arduino-platform: "arduino:avr"
          #  fqbn: "arduino:avr:unowifi"
          - arduino-platform: "arduino:esp8266com"
            fqbn: "esp8266com:esp8266:generic:xtal=160,vt=flash,exception=legacy,ResetMethod=nodemcu,CrystalFreq=26,FlashFreq=40,FlashMode=dio,eesz=4M2M,led=2,ip=hb2f,dbg=Disabled"

    # Build on ubuntu
    runs-on: ubuntu-latest

    # This is the list of steps this job will run.
    steps:
      # We use the `arduino/setup-arduino-cli` action to install and
      # configure the Arduino CLI on the system.
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1.1.1

      # We then install the platform, which one will be determined
      # dynamically by the build matrix.
      - name: Install platform
        run: |
          arduino-cli core update-index
          arduino-cli core install ${{ matrix.arduino-platform }}

      # Checkout ESPixelStick
      - name: Checkout ESPixelStick
        uses: actions/checkout@v2

      # And all the required libraries
      - name: Checkout marvinroger/async-mqtt-client
        uses: actions/checkout@v2
        with:
          repository: marvinroger/async-mqtt-client
          path: $arduinolib/async-mqtt-client

      - name: Checkout bblanchon/ArduinoJson
        uses: actions/checkout@v2
        with:
          repository: bblanchon/ArduinoJson
          path: $arduinolib/ArduinoJson
          ref: 6.x

      - name: Checkout Aircoookie/Espalexa
        uses: actions/checkout@v2
        with:
          repository: Aircoookie/Espalexa
          path: $arduinolib/Espalexa

      - name: Checkout forkineye/ESPAsyncE131
        uses: actions/checkout@v2
        with:
          repository: forkineye/ESPAsyncE131
          path: $arduinolib/ESPAsyncE131

      - name: Checkout me-no-dev/ESPAsyncTCP
        uses: actions/checkout@v2
        with:
          repository: me-no-dev/ESPAsyncTCP
          path: $arduinolib/ESPAsyncTCP

      - name: Checkout me-no-dev/ESPAsyncUDP
        uses: actions/checkout@v2
        with:
          repository: me-no-dev/ESPAsyncUDP
          path: $arduinolib/ESPAsyncUDP

      - name: Checkout me-no-dev/ESPAsyncWebServer
        uses: actions/checkout@v2
        with:
          repository: me-no-dev/ESPAsyncWebServer
          path: $arduinolib/ESPAsyncWebServer

      - name: Checkout djGrrr/Int64String
        uses: actions/checkout@v2
        with:
          repository: djGrrr/Int64String
          path: $arduinolib/Int64String

      - name: Create secrets.h
        run: |
          echo '#define SECRETS_SSID "SSID_NOT_SET"' > ESPixelStick/src/secrets.h'
          echo '#define SECRETS_PASS "PASSPHRASE_NOT_SET"' >> ESPixelStick/src/secrets.h

      # Finally, we compile the sketch, using the FQBN that was set
      # in the build matrix.
      - name: Compile Sketch
        run: arduino-cli compile --fqbn ${{ matrix.fqbn }} ESPixelStick

      # Build the web pages
      - name: Compile Web Pages
        run: |
          cd ESPixelStick
          npm install -g gulp-cli
          npm install
          gulp
          gulp md
          gulp travis